name: CI
permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (get) code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.12.1

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies [pnpm]
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm dependencies (similar to npm ci)
        run: pnpm install --frozen-lockfile

      - name: Lint Code
        run: pnpm nx run-many --target=lint

      - name: Output event data
        run: echo "${{ toJson(github.event) }}"

      - name: Print node/pnpm
        id: versions
        run: |
          node_ver=$(node --version)
          pnpm_ver=$(pnpm --version || true)

          echo "Node: ${node_ver:1}"
          echo "NPM: $(npm --version)"
          if [[ $pnpm_ver != '' ]]; then echo "PNPM: $pnpm_ver"; fi

          echo "node_version=${node_ver:1}" >> $GITHUB_OUTPUT
        shell: bash

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout (get) code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9.12.1

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies [pnpm]
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test Code
        run: pnpm nx run-many --target=test

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout (get) code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.1

      - name: Get pnpm cache directory path
        id: pnpm-cache-dir-path
        run: echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies [pnpm]
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-dir-path.outputs.dir }}
          key: pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build static files
        id: build
        run: pnpm nx run nx-angl-monorepo-playground:build --base-href=/lets-work-together/

      - name: Copy index.html to 404.html [only for GitHub Pages SPA]
        run: cp dist/apps/nx-angl-monorepo-playground/browser/index.html dist/apps/nx-angl-monorepo-playground/browser/404.html

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/apps/nx-angl-monorepo-playground/browser

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "something went wrong"
          echo "${{toJson(github)}}"
          echo "${{toJson(steps)}}"
          echo '${{ toJSON(github) }}'
